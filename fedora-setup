#!/bin/bash

CHROMERPM=google-chrome-stable_current_x86_64.rpm
DNFINSTALL="sudo dnf install -y"
DNFGROUPINSTALL="sudo dnf groupinstall -y"
DNFREMOVE="sudo dnf remove -y"
ROCKBOXUTILITY="http://download.rockbox.org/rbutil/linux/RockboxUtility-v1.4.1-64bit.tar.bz2"
ROCKBOXFOLDER="RockboxUtility-v1.4.1-64bit"
ROCKBOXTAR="RockboxUtility-v1.4.1-64bit.tar.bz2"

echo "Updating first"
sudo dnf update -y

echo "Installing RPM Fusion free & non-free"
$DNFINSTALL https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

echo "Installing groups aka bloat because big SSD"
$DNFGROUPINSTALL "System Tools" "Sound and Video" "Security Lab" "Office/Productivity" "C Development Tools and Libraries" "Administration Tools" "Books and Guides" "Cloud Management Tools" "Development Tools" "Editors"

echo "Installing Termius using Snap (sadly termius pls make RPM)"
$DNFINSTALL snapd
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install termius-app

echo "Installing TLP and necessary deps"
DEPS1="kernel-devel akmod-acpi_call akmod-tp_smapi"
TLP="tlp tlp-rdw"
$DNFINSTALL https://repo.linrunner.de/fedora/tlp/repos/releases/tlp-release.fc$(rpm -E %fedora).noarch.rpm
wget https://repo.linrunner.de/fedora/tlp/repos/RPM-GPG-KEY-tlp-fedora-32-primary
sudo rpm --import RPM-GPG-KEY-tlp-fedora-32-primary 
rm RPM-GPG-KEY-tlp-fedora-32-primary
$DNFINSTALL $DEPS1
$DNFINSTALL $TLP
sudo systemctl enable --now tlp.service

echo "Installing media codecs (gstreamer, LAME, h264, etc)"
$DNFINSTALL gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
$DNFINSTALL lame\* --exclude=lame-devel
sudo dnf group -y upgrade --with-optional Multimedia

echo "Installing Spotify"
$DNFINSTALL lpf-spotify-client
lpf update spotify-client

echo "Enabling automatic notify updates"
$DNFINSTALL dnf-automatic
sudo systemctl enable --now dnf-automatic-notifyonly.timer

echo "Installing some utilities & libs"
UTILS1="htop wget curl neofetch cryptopp neovim"
$DNFINSTALL $UTILS1

echo "Installing yubikey software"
UTILS2="yubioath-desktop ykpers ykclient yubikey-manager libyubikey"
$DNFINSTALL $UTILS2

echo "Installing oh-my-zsh"
sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"

echo "Installing powerlevel10k w/instant prompt support"
wget -P /tmp "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf"
wget -P /tmp "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf"
wget -P /tmp "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf"
wget -P /tmp "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf"
sudo mkdir "/usr/share/fonts/Meslo NF"
sudo mv /tmp/*.ttf "/usr/share/fonts/Meslo NF"
sudo /sbin/restorecon -v "/usr/share/fonts/Meslo NF/MesloLGS NF Bold Italic.ttf"
sudo fc-cache -v
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${HOME/.oh-my-zsh/custom}/themes/powerlevel10k
echo "//========================================================="
echo "// Run "p10k configure" in zsh and enable instant prompt //"
echo "// Set ZSH_THEME to powerlevel10k/powerlevel10k in zshrc"
echo "//========================================================="

	echo "Installing zsh-autosuggestions and zsh-syntax-highlighting"
	ZSHTOOLS="zsh-autosuggestions zsh-syntax-highlighting"
	$DNFINSTALL $ZSHTOOLS
	git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
	git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
	echo "//========================================================="
	echo "Add zsh-syntaxhighlighting and zsh-autosuggestions to zshrc plugins (and vscode :D)"
	echo "//========================================================="

echo "Installing GPG and importing public key"
UTILS3="gnupg"
PUBLICKEY="https://gist.githubusercontent.com/Trapacid/4cb8d34f1072fdc2708e5956bc19f890/raw/a2ef3811c5f5201f5e0b9e0e94f62ec28bf9fd31/public.gpg"
MASTERKEY="0xEFEC3E75AAFD7BC7"

$DNFINSTALL $UTILS3
wget $PUBLICKEY
gpg --import public.gpg
echo "//=====================================//"
echo "//=====================================//"
echo "// trust; 5; y; quit to ultimatley trust for yubikey GPG to work //"
echo "//=====================================//"
echo "//=====================================//"
gpg --edit-key $MASTERKEY
mv public.gpg $HOME/Documents
echo "public.gpg is in $HOME/Documents"

echo "Setting git config"
GITCONFIG="git config --global"
SIGNINGKEY=2F5AA6FADF6C78CF
$GITCONFIG user.name "Trapacid"
$GITCONFIG user.email "ashley@weeb.tech"
$GITCONFIG user.signingkey "$SIGNINGKEY"
$GITCONFIG commit.gpgsign true
$GITCONFIG color.ui true
$GITCONFIG core.editor nvim

echo "Setting up GPG/SSH with yubikey"
DEPS1="pinentry-curses pcsc-lite pcsc-lite-libs gnupg2-smime"
echo "Checking entropy"
ENTROPY=$(cat /proc/sys/kernel/random/entropy_avail)
AGENTCONFIG='export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent';
if [ $ENTROPY -le 1000 ]
then
	echo "Entropy is too low"
elif [ $ENTROPY -ge 2250 ]
then
	echo "Entropy is good. Continuing"
else
	echo "unable to read entropy or all conditions failed"
fi
echo "Downloading hardened gpg-agent.conf and gpg.conf"
wget -O $HOME/.gnupg/gpg-agent.conf https://raw.githubusercontent.com/drduh/config/master/gpg-agent.conf
wget -O $HOME/.gnupg/gpg.conf https://raw.githubusercontent.com/drduh/config/master/gpg.conf
chmod 600 $HOME/.gnupg/gpg.conf
echo "Adding GPG_TTY and gpg agent to rc file"
if [ -f $HOME/.zshrc ]
then
	echo "Adding to .zshrc"
	echo -e "$AGENTCONFIG" >> $HOME/.zshrc
elif [ -f $HOME/.bashrc ]
then
	echo "Adding to .bashrc"
	echo -e "$AGENTCONFIG" >> $HOME/.bashrc
else
	echo "Fallingback to writing to .profile. zshrc and bashrc do not exist"
	echo -e "$AGENTCONFIG" >> $HOME/.profile
fi
echo "//============================//"
echo "Remember to source rc file, plug in yubikey, and run gpg --card-status to ensure GPG sees the card"
echo "//============================//"

echo "Installing firefox and chromium w/Widevine, purging Midori"
BROWSERS="chromium firefox"
DRMUTILS=libva-utils
OUTPUTFOLDER1=/tmp/google-chrome-rpm

$DNFREMOVE midori
$DNFINSTALL $BROWSERS $DRMUTILS
mkdir $OUTPUTFOLDER1
wget -P $OUTPUTFOLDER1 https://dl.google.com/linux/direct/$CHROMERPM
cd $OUTPUTFOLDER1
rpm2cpio ./$CHROMERPM | cpio -idmv
cd opt/google/chrome
sudo mv WidevineCdm /usr/lib64/chromium-browser

echo "Downloading RockboxUtility"
cd $HOME/Downloads
wget $ROCKBOXUTILITY
tar -xvf $ROCKBOXTAR
sudo mv $ROCKBOXFOLDER/RockboxUtility /usr/local/bin
rm -rf $HOME/Downloads/$ROCKBOXFOLDER $HOME/Downloads/$ROCKBOXTAR

echo "Installing Java 1.8.0 (8) & JDK"
JAVA="java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-devel.x86_64"
$DNFINSTALL $JAVA

echo "Downloading Android SDK platform-tools"
PLATFORMTOOLSURL="https://dl.google.com/android/repository/platform-tools-latest-linux.zip"
PLATFORMTOOLSZIP="platform-tools-latest-linux.zip"
cd $HOME/Downloads
wget $PLATFORMTOOLSURL
unzip $PLATFORMTOOLSZIP
mv platform-tools $HOME
rm $PLATFORMTOOLSZIP
echo "//====================================//"
echo "Set PATH to include $HOME/platform-tools"
echo "//====================================//"
