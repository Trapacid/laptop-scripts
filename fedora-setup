#!/bin/bash

CHROMERPM=google-chrome-stable_current_x86_64.rpm
DNFINSTALL="sudo dnf install -y"
DNFGROUPINSTALL="sudo dnf groupinstall -y"
DNFREMOVE="sudo dnf remove -y"
#ROCKBOXUTILITY="http://download.rockbox.org/rbutil/linux/RockboxUtility-v1.4.1-64bit.tar.bz2"
#ROCKBOXFOLDER="RockboxUtility-v1.4.1-64bit"
#ROCKBOXTAR="RockboxUtility-v1.4.1-64bit.tar.bz2"

echo "Updating"
sudo dnf update -y

echo "Installing RPM Fusion free & non-free"
RPMFREE="https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm"
RPMNONFREE="https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm"
$DNFINSTALL $RPMFREE $RPMNONFREE

echo "Updating again"
sudo dnf update -y

echo 'Checking for Broadcom wifi card'
BROADCOMFIRMWARE="broadcom-bt-firmware"
if lspci | grep Broadcom > /dev/null; then
	echo 'Broadcom wifi card found, installing broadcom packages'
	$DNFINSTALL $BROADCOMFIRMWARE
else
	echo 'No broadcom chip found, horray!'
fi

echo "Installing media codecs (gstreamer, LAME, h264, etc)"
$DNFINSTALL gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
$DNFINSTALL lame\* --exclude=lame-devel
sudo dnf group -y upgrade --with-optional Multimedia

echo "Installing Spotify"
flatpak remote-add --if-not-exists flathub 'https://flathub.org/repo/flathub.flatpakrepo'
flatpak install -y flathub com.spotify.Client

echo "Installing WINE and winetricks"
WINERPM="wine winetricks"
$DNFINSTALL $WINERPM

echo "Enabling automatic notify updates"
$DNFINSTALL dnf-automatic
sudo systemctl enable --now dnf-automatic-notifyonly.timer
echo "Edit /etc/dnf/automatic.conf if necessary"

echo "Installing some utilities, libs, and apps"
UTILS1="flashrom rng-tools opensc golang-bin libnotify libnotify-devel libnotifymm libnotifymm-devel pkcs11-dump pkcs11-helper tpm-tools-pkcs11 openssl-pkcs11 sharutils tilix gnome-tweaks mcstrans libselinux-utils setools setools-gui setools-console selinux-policy-targeted selinux-policy policycoreutils htop wget curl neofetch cryptopp neovim util-linux util-linux-user"
$DNFINSTALL $UTILS1
$DNFINSTALL '@gnome-desktop'
pip install --upgrade --force-reinstall neovim --user
pip install --upgrade --force-reinstall discord --user

echo "Installing neovim rc file"
mkdir -p $HOME/.config/nvim
cp init.vim $HOME/.config/nvim

echo "Installing yubikey software"
UTILS2="yubioath-desktop ykpers ykclient yubikey-manager libyubikey"
$DNFINSTALL $UTILS2

echo "Installing GPG and importing public key"
UTILS3="gnupg"
PUBLICKEY="https://gist.githubusercontent.com/linuxfur/4cb8d34f1072fdc2708e5956bc19f890/raw/02a0ce6cc9afa513855a35f483e41ff7aa08f86c/public.gpg"
MASTERKEY="0x9507D5DCD1997DE9"
SSHKEYID="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEifx7YeDpkWMNnnQzJ3kSNj8yBBrn7kkOi++Ge2bvE4 cardno:000611335101"

$DNFINSTALL $UTILS3
wget -O $MASTERKEY.txt $PUBLICKEY
gpg --import $MASTERKEY.txt
echo $SSHKEYID > $HOME/.ssh/id_ed25519_yubikey.pub
chmod 0644 $HOME/.ssh/id_ed25519_yubikey.pub
restorecon -vF $HOME/.ssh/id_ed25519_yubikey.pub
echo "//=====================================//"
echo "//=====================================//"
echo "// trust; 5; y; quit to ultimatley trust for yubikey GPG to work //"
echo "//=====================================//"
echo "//=====================================//"
gpg --edit-key $MASTERKEY
mv $MASTERKEY.txt $HOME/Documents/$MASTERKEY.txt
echo "$MASTERKEY.txt is in $HOME/Documents"

echo "Setting git config"
GITCONFIG="git config --global"
SIGNINGKEY=0xA6FB40347E5344AC
$GITCONFIG user.name "Ashley"
$GITCONFIG user.email "meowiee@archlinux.email"
$GITCONFIG user.signingkey "$SIGNINGKEY"
$GITCONFIG commit.gpgsign true
$GITCONFIG color.ui true
$GITCONFIG core.editor nvim

echo "Setting up GPG/SSH with yubikey"
DEPS1="pinentry-curses pcsc-lite pcsc-lite-libs gnupg2-smime"
echo "Checking entropy"
ENTROPY=$(cat /proc/sys/kernel/random/entropy_avail)
AGENTCONFIG='export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent';
if [ $ENTROPY -le 1000 ]
then
	echo "Entropy is too low"
elif [ $ENTROPY -ge 2250 ]
then
	echo "Entropy is good. Continuing"
else
	echo "unable to read entropy or all conditions failed"
fi
echo "Downloading hardened gpg-agent.conf and gpg.conf"
wget -O $HOME/.gnupg/gpg-agent.conf https://raw.githubusercontent.com/drduh/config/master/gpg-agent.conf
wget -O $HOME/.gnupg/gpg.conf https://raw.githubusercontent.com/drduh/config/master/gpg.conf
chmod 600 $HOME/.gnupg/gpg.conf
echo "Importing .zshrc"

if [ ! -f .zshrc ]; then
	ZSHRCURL="https://pastebin.com/raw/k9zebfST"
	wget -O $HOME/.zshrc $ZSHRCURL
else
	cp .zshrc $HOME/.zshrc
fi
echo "//============================//"
echo "Remember to source rc file, plug in yubikey, and run gpg --card-status to ensure GPG sees the card"
echo '!! If you get agent refused operation errors, run this command: gpg-connect-agent updatestartuptty /bye'
echo "//============================//"

echo "purging Midori and Firefox (security), installing Google Chrome"
BROWSERS="google-chrome"
DRMUTILS=libva-utils

$DNFREMOVE midori firefox
$DNFINSTALL $BROWSERS $DRMUTILS
$DNFINSTALL https://dl.google.com/linux/direct/$CHROMERPM
$DNFINSTALL $BROWSERS $DRMUTILS

echo "SELinux and Chromium SUID sandboxing"
sudo setsebool -P unconfined_chrome_sandbox_transition 0

echo "Removing xfce4-terminal"
$DNFREMOVE xfce4-terminal

echo "Installing Terminus fonts"
TERMINUSFONTS="terminus-fonts terminus-fonts-console"
$DNFINSTALL $TERMINUSFONTS

echo "Installing coreboot and heads dependencies"
COREBOOTDEPS="git make gcc-gnat libuuid-devel nasm texinfo flex bison xz bzip2 gcc g++ ncurses-devel wget zlib-devel"
HEADSDEPS="@development-tools gcc-c++ gcc-gnat zlib-devel perl-Digest-MD5 perl-Digest-SHA uuid-devel pcsc-tools ncurses-devel lbzip2 libuuid-devel lzma elfutils-libelf-devel bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget libusb-devel cmake automake pv bsdiff autoconf libtool cpio texinfo"
$DNFINSTALL $COREBOOTDEPS
$DNFINSTALL $HEADSDEPS

echo 'Downgrading gawk pls fix heads osresearch'
GAWK421="https://download-ib01.fedoraproject.org/pub/fedora/linux/releases/30/Everything/x86_64/os/Packages/g/gawk-4.2.1-6.fc30.x86_64.rpm"
$DNFINSTALL $GAWK421

echo "Downloading RockboxUtility"
cd $HOME/Downloads
wget $ROCKBOXUTILITY
tar -xvf $ROCKBOXTAR
sudo mv $ROCKBOXFOLDER/RockboxUtility /usr/local/bin
rm -rf $HOME/Downloads/$ROCKBOXFOLDER $HOME/Downloads/$ROCKBOXTAR

echo "Installing Java 1.8.0 (8) & JDK"
JAVA="java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-devel.x86_64"
$DNFINSTALL $JAVA

echo "Downloading VMWare Workstation Player and Pro"
VMWARE="https://download3.vmware.com/software/player/file/VMware-Player-16.0.0-16894299.x86_64.bundle"
VMWAREPRO="https://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-16.0.0-16894299.x86_64.bundle"
wget -P $HOME/Downloads $VMWARE
wget -P $HOME/Downloads $VMWAREPRO
chmod 765 "$HOME/Downloads/VMware-Player-16.0.0-16894299.x86_64.bundle"
chmod 765 "$HOME/Downloads/VMware-Workstation-Full-16.0.0-16894299.x86_64.bundle"

#echo "Adding VirtualBox repo and downloading Extension pack"
#VBOXREPO="https://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo"
#VBOXEXTPACK="https://download.virtualbox.org/virtualbox/6.1.14/Oracle_VM_VirtualBox_Extension_Pack-6.1.14.vbox-extpack"
#$DNFINSTALL $VBOXREPO
#sudo dnf update
#wget -P $HOME/Downloads $VBOXEXTPACK

echo "Downloading Android SDK platform-tools"
PLATFORMTOOLSURL="https://dl.google.com/android/repository/platform-tools-latest-linux.zip"
PLATFORMTOOLSZIP="platform-tools-latest-linux.zip"
cd $HOME/Downloads
wget $PLATFORMTOOLSURL
unzip $PLATFORMTOOLSZIP
mv platform-tools $HOME
rm $PLATFORMTOOLSZIP

echo "Sysctl tweaks"
sudo echo 'kernel.printk = 3 3 3 3' > /etc/sysctl.d/30_silent-kernel-printk.conf
sudo echo 'kernel.yama.ptrace_scope=3

net.core.bpf_jit_harden=2

kernel.unprivileged_bpf_disabled=1

user.max_user_namespaces=0

vm.swappiness=1
vm.unprivileged_userfaultfd=0

fs.suid_dumpable=0

vm.mmap_rnd_bits=32
vm.mmap_rnd_compat_bits=16

net.ipv4.tcp_timestamps=0
net.ipv4.tcp_rfc1337=1

fs.protected_fifos=2
fs.protected_regular=2
fs.protected_hardlinks=1
fs.protected_symlinks=1

kernel.core_pattern=|/bin/false

kernel.kexec_load_disabled=1
kernel.perf_event_paranoid=3

kernel.dmesg_restrict=1
kernel.kptr_restrict=2

net.ipv4.ip_forward=0
net.ipv4.conf.all.send_redirects=0
net.ipv4.conf.default.send_redirects=0
net.ipv4.tcp_max_syn_backlog=1280
net.ipv4.icmp_echo_ignore_broadcasts=1
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.all.secure_redirects=0
net.ipv4.conf.all.log_martians=1
net.ipv4.conf.default.accept_source_route=0
net.ipv4.conf.default.accept_redirects=0
net.ipv4.conf.default.secure_redirects=0
net.ipv4.icmp_echo_ignore_broadcasts=1
net.ipv4.icmp_ignore_bogus_error_responses=1
net.ipv4.tcp_syncookies=1
net.ipv4.conf.default.log_martians=1
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.default.rp_filter=1
net.ipv4.tcp_timestamps=0
net.ipv6.conf.default.accept_source_route=0
net.ipv6.conf.all.accept_ra=0
net.ipv6.conf.all.accept_source_route=0
net.ipv6.conf.default.accept_ra=0
net.ipv6.conf.all.accept_redirects=0
net.ipv6.conf.default.accept_redirects=0' > /etc/sysctl.d/99-sysctl.conf

echo "//====================================//"
echo "//====================================//"
echo "//====================================//"
echo "// POST INSTALL NOTES //"
echo "//====================================//"

echo 'Edit /etc/dnf/automatic.conf if necessary'
echo "Remember to source rc file, plug in yubikey, and run gpg --card-status to ensure GPG sees the card"
echo '!! If you get agent refused operation errors, run this command: gpg-connect-agent updatestartuptty /bye'
echo "setup VMWare Player for CTF rounds by running the bundle in a shell"
